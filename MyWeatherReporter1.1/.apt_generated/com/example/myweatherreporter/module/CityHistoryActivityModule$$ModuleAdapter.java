// Code generated by dagger-compiler.  Do not edit.
package com.example.myweatherreporter.module;

import dagger.internal.Binding;
import dagger.internal.Linker;
import dagger.internal.ModuleAdapter;
import java.util.Map;
import java.util.Set;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class CityHistoryActivityModule$$ModuleAdapter extends ModuleAdapter<CityHistoryActivityModule> {
  private static final String[] INJECTS = { "members/com.example.myweatherreporter.activity.CityWeatherHistoryActivity", };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public CityHistoryActivityModule$$ModuleAdapter() {
    super(com.example.myweatherreporter.module.CityHistoryActivityModule.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, true /*complete*/, true /*library*/);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(Map<String, Binding<?>> map, CityHistoryActivityModule module) {
    map.put("java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay>", new ProvideCityWeatherHistoryArrayListProvidesAdapter(module));
    map.put("android.content.Context", new ProvideCityHistoryActivityContextProvidesAdapter(module));
    map.put("com.example.myweatherreporter.listadapter.CustomCityHistoryListAdapter", new ProvideCustomCityListAdapterProvidesAdapter(module));
  }

  /**
   * A {@code Binding<java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay>>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay>>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideCityWeatherHistoryArrayListProvidesAdapter extends Binding<java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay>>
      implements Provider<java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay>> {
    private final CityHistoryActivityModule module;

    public ProvideCityWeatherHistoryArrayListProvidesAdapter(CityHistoryActivityModule module) {
      super("java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay>", null, IS_SINGLETON, "com.example.myweatherreporter.module.CityHistoryActivityModule.provideCityWeatherHistoryArrayList()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay>>}.
     */
    @Override
    public java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay> get() {
      return module.provideCityWeatherHistoryArrayList();
    }
  }

  /**
   * A {@code Binding<android.content.Context>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<android.content.Context>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideCityHistoryActivityContextProvidesAdapter extends Binding<android.content.Context>
      implements Provider<android.content.Context> {
    private final CityHistoryActivityModule module;

    public ProvideCityHistoryActivityContextProvidesAdapter(CityHistoryActivityModule module) {
      super("android.content.Context", null, IS_SINGLETON, "com.example.myweatherreporter.module.CityHistoryActivityModule.provideCityHistoryActivityContext()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<android.content.Context>}.
     */
    @Override
    public android.content.Context get() {
      return module.provideCityHistoryActivityContext();
    }
  }

  /**
   * A {@code Binding<com.example.myweatherreporter.listadapter.CustomCityHistoryListAdapter>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Owning the dependency links between {@code com.example.myweatherreporter.listadapter.CustomCityHistoryListAdapter} and its
   * dependencies.
   *
   * Being a {@code Provider<com.example.myweatherreporter.listadapter.CustomCityHistoryListAdapter>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideCustomCityListAdapterProvidesAdapter extends Binding<com.example.myweatherreporter.listadapter.CustomCityHistoryListAdapter>
      implements Provider<com.example.myweatherreporter.listadapter.CustomCityHistoryListAdapter> {
    private final CityHistoryActivityModule module;
    private Binding<java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay>> cityHistoryList;

    public ProvideCustomCityListAdapterProvidesAdapter(CityHistoryActivityModule module) {
      super("com.example.myweatherreporter.listadapter.CustomCityHistoryListAdapter", null, NOT_SINGLETON, "com.example.myweatherreporter.module.CityHistoryActivityModule.provideCustomCityListAdapter()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Used internally to link bindings/providers together at run time
     * according to their dependency graph.
     */
    @Override
    @SuppressWarnings("unchecked")
    public void attach(Linker linker) {
      cityHistoryList = (Binding<java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay>>) linker.requestBinding("java.util.ArrayList<com.example.myweatherreporter.beans.CityHistoryOneDay>", CityHistoryActivityModule.class, getClass().getClassLoader());
    }

    /**
     * Used internally obtain dependency information, such as for cyclical
     * graph detection.
     */
    @Override
    public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
      getBindings.add(cityHistoryList);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.example.myweatherreporter.listadapter.CustomCityHistoryListAdapter>}.
     */
    @Override
    public com.example.myweatherreporter.listadapter.CustomCityHistoryListAdapter get() {
      return module.provideCustomCityListAdapter(cityHistoryList.get());
    }
  }
}
